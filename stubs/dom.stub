<?php

class DOMDocument
{

	/** @var DOMDocumentType|null */
	public $doctype;

	/** @var DOMElement|null */
	public $documentElement;

	/** @var null */
	public $ownerDocument;

	/**
	 * @param string $name
	 * @return DOMNodeList<DOMElement>
	 */
	public function getElementsByTagName ($name) {}

	/**
	 * @param string $namespaceURI
	 * @param string $localName
	 * @return DOMNodeList<DOMElement>
	 */
	public function getElementsByTagNameNS ($namespaceURI, $localName) {}

}

class DOMNode
{

}

class DOMElement extends DOMNode
{

	/** @var DOMDocument */
	public $ownerDocument;

	/**
	 * @param string $name
	 * @return DOMNodeList<DOMElement>
	 */
	public function getElementsByTagName ($name) {}

	/**
	 * @param string $namespaceURI
	 * @param string $localName
	 * @return DOMNodeList<DOMElement>
	 */
	public function getElementsByTagNameNS ($namespaceURI, $localName) {}

}

/**
 * @template-covariant TNode as DOMNode
 * @implements Traversable<int, TNode>
 * @implements IteratorAggregate<int, TNode>
 */
class DOMNodeList implements IteratorAggregate, Countable
{

    /** @var int */
    public $length;

    /**
     * @return int
     */
    public function count() {}

	/**
	 * @param int $index
	 * @return TNode|null
	 */
	public function item ($index) {}

}

class DOMXPath
{

	/** @var DOMDocument */
	public $document;

    /**
     * @param string $expression
     * @param DOMNode|null $contextNode
     * @param boolean $registerNodeNS
     * @return boolean
     */
    public function evaluate($expression, $contextNode, $registerNodeNS) {}

    /**
     * @param string $expression
     * @param DOMNode|null $contextNode
     * @param boolean $registerNodeNS
     * @return DOMNodeList<DOMNode>|false
     */
    public function query($expression, $contextNode, $registerNodeNS) {}

    /**
     * @param string $prefix
     * @param string $namespace
     * @return boolean
     */
    public function registerNamespace($prefix, $namespace) {}

    /**
     * @param callable-string|array<callable-string>|null $restrict
     * @return void
     */
    public function registerPhpFunctions($restrict) {}

}

class DOMAttr
{

	/** @var DOMDocument */
	public $ownerDocument;

}

class DOMCharacterData
{

	/** @var DOMDocument */
	public $ownerDocument;

}

class DOMCharacterData
{

	/** @var DOMDocument */
	public $ownerDocument;

}

class DOMDocumentType
{

	/** @var DOMDocument */
	public $ownerDocument;

}

class DOMEntity
{

	/** @var DOMDocument */
	public $ownerDocument;

}

class DOMNotation
{

	/** @var DOMDocument */
	public $ownerDocument;

}

class DOMProcessingInstruction
{

	/** @var DOMDocument */
	public $ownerDocument;

	/**
	 * @var string
	 */
	public $target;

	/**
	 * @var string
	 */
	public $data;

}

/**
 * @property-read int $length
 */
class DOMNamedNodeMap
{

}

class DOMText
{

	/** @var string */
	public $wholeText;

}
